/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Train, TrainInterface } from "../../contracts/Train";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "trainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "trainNumber",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "TrainCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "trainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "operational",
        type: "bool",
      },
    ],
    name: "TrainUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "trainNumber",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "coachCount",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "seatsPerCoach",
        type: "uint16",
      },
    ],
    name: "addTrain",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllTrains",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "trainId",
        type: "uint256",
      },
    ],
    name: "getTrain",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "trainNumber",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "coachCount",
            type: "uint8",
          },
          {
            internalType: "uint16",
            name: "seatsPerCoach",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "operational",
            type: "bool",
          },
        ],
        internalType: "struct Train.TrainData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trainCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "trainId",
        type: "uint256",
      },
    ],
    name: "trainExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "trains",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "trainNumber",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "coachCount",
        type: "uint8",
      },
      {
        internalType: "uint16",
        name: "seatsPerCoach",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "operational",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "trainId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "coachCount",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "operational",
        type: "bool",
      },
    ],
    name: "updateTrain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461007a5733156100645760008054336001600160a01b03198216811783556040519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3610d5790816100808239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806318c6ac7a146108aa5780632deafbc3146107815780633cfefa4614610763578063589351391461035f578063598c68b1146102c957806361d1291c14610291578063715018a6146102385780638da5cb5b1461020f578063dc4ad1341461011f5763f2fde38b1461008a57600080fd5b3461011a57602036600319011261011a576004356001600160a01b038181169182900361011a576100b9610c8b565b811561010157600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b3461011a57600036600319011261011a5760025461013c81610d09565b6101496040519182610ae2565b81815261015582610d09565b60208281019391601f1901368537600191825b818111156101aa57505060405192818401908285525180915260408401949160005b8281106101975785870386f35b835187529581019592810192840161018a565b9294919391926000198101908082116101f95783518210156101e35780866101d89360051b86010152610cb7565b949294939193610168565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b3461011a57600036600319011261011a576000546040516001600160a01b039091168152602090f35b3461011a57600036600319011261011a57610251610c8b565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461011a57602036600319011261011a57602060043580151590816102bc575b506040519015158152f35b90506002541015826102b1565b3461011a57602036600319011261011a576004356000526001602052604060002080546102f860018301610be5565b9160ff61033a600361030c60028501610be5565b9301549261032c604051968796875260c0602088015260c0870190610b6b565b908582036040870152610b6b565b91818116606085015261ffff8160081c16608085015260181c16151560a08301520390f35b3461011a57608036600319011261011a5760043567ffffffffffffffff811161011a57610390903690600401610b04565b60243567ffffffffffffffff811161011a576103b0903690600401610b04565b906103b9610b5b565b9060643561ffff811680910361011a576103d1610c8b565b6103dc600254610cb7565b9283600255604051916103ee83610ac6565b84835260ff60208401928584528760408601521660608401526080830152600160a0830152836000526001602052604060002090825182555180519067ffffffffffffffff821161067d5781906104486001850154610bab565b601f8111610710575b50602090601f831160011461069e57600092610693575b50508160011b916000199060031b1c19161760018201555b604082015180519067ffffffffffffffff821161067d576104a46002840154610bab565b601f8111610636575b509160209693918695938890601f8311600114610594579360a0600361057e9585610571999661055d967fe93aaefea37ba95fdb2949a8c2fe1bbd589edcc973384a6916157e6798d0f6039c9a600092610589575b50508160011b9160001990851b1c19161760028201555b019160ff60608201511683549062ffff00608084015160081b169162ffffff1916171783550151151563ff000000825491151560181b169063ff0000001916179055565b604051938493604085526040850190610b6b565b9083820389850152610b6b565b0390a2604051908152f35b015190508f80610502565b9060028401600052896000209160005b601f198516811061061c5750600361057e9560018661055d967fe93aaefea37ba95fdb2949a8c2fe1bbd589edcc973384a6916157e6798d0f6039c9a9660a0966105719d9a601f19811610610604575b505050811b016002820155610519565b015160001983871b60f8161c191690558f80806105f4565b8183015184558a9950600190930192918b01918b016105a4565b600284016000526020600020601f840160051c810160208510610676575b601f830160051c8201811061066a5750506104ad565b60008155600101610654565b5080610654565b634e487b7160e01b600052604160045260246000fd5b015190508780610468565b9250600184016000526020600020906000935b601f19841685106106f5576001945083601f198116106106dc575b505050811b016001820155610480565b015160001960f88460031b161c191690558780806106cc565b818101518355602094850194600190930192909101906106b1565b909150600184016000526020600020601f840160051c81016020851061075c575b90849392915b601f830160051c8201811061074d575050610451565b60008155859450600101610737565b5080610731565b3461011a57600036600319011261011a576020600254604051908152f35b3461011a5760208060031936011261011a57600435600060a06040516107a681610ac6565b8281526060858201526060604082015282606082015282608082015201528015158061089e575b6107d690610cc6565b600052600181526040600020604051906107ef82610ac6565b805482526107ff60018201610be5565b838301908152600361081360028401610be5565b9260408501938452015490606084019260ff8316845260ff610883608087019261087061ffff95868860081c1686528460a08b019860181c16151588526040519a8b9a818c5251908b01525160c060408b015260e08a0190610b6b565b9051888203601f190160608a0152610b6b565b9451166080860152511660a084015251151560c08301520390f35b506002548111156107cd565b3461011a57608036600319011261011a5767ffffffffffffffff60043560243582811161011a576108df903690600401610b04565b916108e8610b5b565b6064358015159182820361011a576108fe610c8b565b84151580610aba575b61091090610cc6565b8460005260019360209480865260406000209181830191895191821161067d5761093a8354610bab565b601f8111610a71575b5087601f83116001146109dc5761055d946109c899979484807f8860253397016b66b18e691ceec2f8b9ebca11225ee116fde07e60c05b7b328c9d9e9b999660ff966003966000936109d1575b501b9160001990861b1c19161790555b01911660ff198254161781559063ff000000825491151560181b169063ff0000001916179055565b918301520390a2005b8e0151925038610990565b601f9291921982169084600052896000209160005b818110610a5c5750947f8860253397016b66b18e691ceec2f8b9ebca11225ee116fde07e60c05b7b328c9b9c9997948460039461055d999460ff976109c89f9d9a10610a44575b5050811b0190556109a0565b8d015160001983881b60f8161c191690558f80610a38565b8d830151845592850192918b01918b016109f1565b8360005288600020601f840160051c8101918a8510610ab0575b601f0160051c019082905b828110610aa4575050610943565b60008155018290610a96565b9091508190610a8b565b50600254851115610907565b60c0810190811067ffffffffffffffff82111761067d57604052565b90601f8019910116810190811067ffffffffffffffff82111761067d57604052565b81601f8201121561011a5780359067ffffffffffffffff821161067d5760405192610b39601f8401601f191660200185610ae2565b8284526020838301011161011a57816000926020809301838601378301015290565b6044359060ff8216820361011a57565b919082519283825260005b848110610b97575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610b76565b90600182811c92168015610bdb575b6020831014610bc557565b634e487b7160e01b600052602260045260246000fd5b91607f1691610bba565b9060405191826000825492610bf984610bab565b908184526001948581169081600014610c685750600114610c25575b5050610c2392500383610ae2565b565b9093915060005260209081600020936000915b818310610c50575050610c2393508201013880610c15565b85548884018501529485019487945091830191610c38565b915050610c2394506020925060ff191682840152151560051b8201013880610c15565b6000546001600160a01b03163303610c9f57565b60405163118cdaa760e01b8152336004820152602490fd5b60001981146101f95760010190565b15610ccd57565b60405162461bcd60e51b8152602060048201526014602482015273151c985a5b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b67ffffffffffffffff811161067d5760051b6020019056fea2646970667358221220f11576568ca0ccd65ff95481d717b75a0a44b0a75c40736ae83854d2da5eb9f864736f6c63430008140033";

type TrainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TrainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Train__factory extends ContractFactory {
  constructor(...args: TrainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Train> {
    return super.deploy(overrides || {}) as Promise<Train>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Train {
    return super.attach(address) as Train;
  }
  override connect(signer: Signer): Train__factory {
    return super.connect(signer) as Train__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrainInterface {
    return new utils.Interface(_abi) as TrainInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Train {
    return new Contract(address, _abi, signerOrProvider) as Train;
  }
}
