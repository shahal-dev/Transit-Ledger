/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Station, StationInterface } from "../../contracts/Station";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "stationId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "stationCode",
        type: "string",
      },
    ],
    name: "StationCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "stationId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "operational",
        type: "bool",
      },
    ],
    name: "StationUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "city",
        type: "string",
      },
      {
        internalType: "string",
        name: "stationCode",
        type: "string",
      },
      {
        internalType: "int256",
        name: "latitude",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "longitude",
        type: "int256",
      },
      {
        internalType: "uint8",
        name: "platformCount",
        type: "uint8",
      },
    ],
    name: "addStation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllStations",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stationId",
        type: "uint256",
      },
    ],
    name: "getStation",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "city",
            type: "string",
          },
          {
            internalType: "string",
            name: "stationCode",
            type: "string",
          },
          {
            internalType: "int256",
            name: "latitude",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "longitude",
            type: "int256",
          },
          {
            internalType: "uint8",
            name: "platformCount",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "operational",
            type: "bool",
          },
        ],
        internalType: "struct Station.StationData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "stationCode",
        type: "string",
      },
    ],
    name: "getStationByCode",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stationCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stationId",
        type: "uint256",
      },
    ],
    name: "stationExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stations",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "city",
        type: "string",
      },
      {
        internalType: "string",
        name: "stationCode",
        type: "string",
      },
      {
        internalType: "int256",
        name: "latitude",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "longitude",
        type: "int256",
      },
      {
        internalType: "uint8",
        name: "platformCount",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "operational",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stationId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "platformCount",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "operational",
        type: "bool",
      },
    ],
    name: "updateStation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461007a5733156100645760008054336001600160a01b03198216811783556040519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361102b90816100808239f35b631e4fbdf760e01b815260006004820152602490fd5b600080fdfe608080604052600436101561001357600080fd5b60e0600035811c918263106e054d14610b92575081632118f9c414610aa2578163262f0d7114610a5f578163473ce7a114610536578163715018a6146104dd5781638da5cb5b146104b457816392f859db146103c957508063b1f4de0014610185578063da36d3db14610167578063ddfce73f1461012f5763f2fde38b1461009a57600080fd5b3461012a57602036600319011261012a576004356001600160a01b038181169182900361012a576100c9610ec3565b811561011157600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b3461012a57602036600319011261012a576020600435801515908161015a575b506040519015158152f35b905060025410158261014f565b3461012a57600036600319011261012a576020600254604051908152f35b3461012a57608036600319011261012a5767ffffffffffffffff60043560243582811161012a576101ba903690600401610d9c565b60443560ff811680910361012a576064358015159182820361012a576101de610ec3565b841515806103bd575b6101f090610efe565b846000526001956020968088526040600020918183019187519182116103a75761021a8354610df3565b601f811161035e575b5089601f83116001146102ca57937f6a91ddde4a57e57341865ef39d1448866c551502267c92277c738d4940327de8999a969383806102b69b9a98956006956102a2996000936102bf575b501b916000199060031b1c19161790555b019060ff198254161781559061ff00825491151560081b169061ff001916179055565b604051938493604085526040850190610d1d565b918301520390a2005b8d015192503861026e565b601f92919219821690846000528b6000209160005b818110610349575093836102a297937f6a91ddde4a57e57341865ef39d1448866c551502267c92277c738d4940327de89d9e9a97936006966102b69e9d9b9810610330575b5050811b01905561027f565b8c015160001960f88460031b161c191690558e80610324565b8b830151845592850192918d01918d016102df565b836000528a600020601f840160051c8101918c851061039d575b601f0160051c019082905b828110610391575050610223565b60008155018290610383565b9091508190610378565b634e487b7160e01b600052604160045260246000fd5b506002548511156101e7565b3461012a57602036600319011261012a576004356000526001602052604060002080549060405192610409846104028160018601610e2d565b0385610d7a565b60ff6040516104268161041f8160028801610e2d565b0382610d7a565b604051936104428561043b8160038501610e2d565b0386610d7a565b61049360048201549561048560066005850154940154946104776040519b8c9b8c5260208c61010091829101528c0190610d1d565b908a820360408c0152610d1d565b9088820360608a0152610d1d565b94608087015260a086015281811660c086015260081c161515908301520390f35b3461012a57600036600319011261012a576000546040516001600160a01b039091168152602090f35b3461012a57600036600319011261012a576104f6610ec3565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b3461012a5760c036600319011261012a5760043567ffffffffffffffff811161012a57610567903690600401610d9c565b9060243567ffffffffffffffff811161012a57610588903690600401610d9c565b9060443567ffffffffffffffff811161012a576105a9903690600401610d9c565b9060a4359060ff821680920361012a576105c1610ec3565b6105cc600254610eef565b9384600255604051926105de84610d5d565b85845260208401918783526040850152846060850152606435608085015260843560a085015260c0840152600182840152846000526001602052604060002090835182555180519067ffffffffffffffff82116103a75781906106446001850154610df3565b601f8111610a0c575b50602090601f831160011461099a5760009261098f575b50508160011b916000199060031b1c19161760018201555b604083015180519067ffffffffffffffff82116103a75781906106a26002850154610df3565b601f811161093c575b50602090601f83116001146108ca576000926108bf575b50508160011b916000199060031b1c19161760028201555b606083015180519067ffffffffffffffff82116103a7576106fe6003840154610df3565b601f8111610878575b50918695939160209895938990601f83116001146107d6579360066107b39794846102a2957f1fffc783493ed76c7a0a9dfa3cb94fdba8957d8f9787d152307682edff679d639b99956107c0996000926107cb575b50508160011b916000199060031b1c19161760038201555b6080840151600482015560a0840151600582015560c084015191018054929093015161ffff1990921660ff919091161790151560081b61ff0016179055565b9083820389850152610d1d565b0390a2604051908152f35b015190508f8061075c565b90600384016000528a6000209160005b601f198516811061085e57506107b397946001857f1fffc783493ed76c7a0a9dfa3cb94fdba8957d8f9787d152307682edff679d639b99956107c099956006956102a299601f19811610610845575b505050811b016003820155610774565b015160001960f88460031b161c191690558f8080610835565b8183015184558b9a50600190930192918c01918c016107e6565b600384016000526020600020601f840160051c8101602085106108b8575b601f830160051c820181106108ac575050610707565b60008155600101610896565b5080610896565b0151905088806106c2565b9250600284016000526020600020906000935b601f1984168510610921576001945083601f19811610610908575b505050811b0160028201556106da565b015160001960f88460031b161c191690558880806108f8565b818101518355602094850194600190930192909101906108dd565b909150600284016000526020600020601f840160051c810160208510610988575b90849392915b601f830160051c820181106109795750506106ab565b60008155859450600101610963565b508061095d565b015190508880610664565b9250600184016000526020600020906000935b601f19841685106109f1576001945083601f198116106109d8575b505050811b01600182015561067c565b015160001960f88460031b161c191690558880806109c8565b818101518355602094850194600190930192909101906109ad565b909150600184016000526020600020601f840160051c810160208510610a58575b90849392915b601f830160051c82018110610a4957505061064d565b60008155859450600101610a33565b5080610a2d565b3461012a57602036600319011261012a5760043567ffffffffffffffff811161012a57610a9a610a956020923690600401610d9c565b610f5b565b604051908152f35b3461012a57600036600319011261012a57600254610abf81610f43565b610acc6040519182610d7a565b818152610ad882610f43565b60208281019391601f1901368537600191825b81811115610b2d57505060405192818401908285525180915260408401949160005b828110610b1a5785870386f35b8351875295810195928101928401610b0d565b929491939192600019810190808211610b7c578351821015610b66578086610b5b9360051b86010152610eef565b949294939193610aeb565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b3461012a576020908160031936011261012a57600435610bb182610d5d565b60008252600084606093848682015284604082015284808201528260808201528260a08201528260c0820152015280151580610d11575b610bf190610efe565b6000526001825260406000209160405192610c0b84610d5d565b8054845260405194610c2b86610c248160018601610e2d565b0387610d7a565b82850195865260ff8560405193610c498561043b8160028501610e2d565b60408201948552610cf3604051610c678161041f8160038701610e2d565b88840190815260048301549860808501998a52610ce2600660058601549560a08801968752015498878960c0890198828d168a52019a60081c1615158a52610cce6040519e8f9e8f9d8e9181835251910152516101206101009d8e60408201520190610d1d565b90518d601f19948582850301910152610d1d565b9151908b83030160808c0152610d1d565b965160a08901525160c0880152511690850152511515908301520390f35b50600254811115610be8565b919082519283825260005b848110610d49575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610d28565b610100810190811067ffffffffffffffff8211176103a757604052565b90601f8019910116810190811067ffffffffffffffff8211176103a757604052565b81601f8201121561012a5780359067ffffffffffffffff82116103a75760405192610dd1601f8401601f191660200185610d7a565b8284526020838301011161012a57816000926020809301838601378301015290565b90600182811c92168015610e23575b6020831014610e0d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691610e02565b9060009291805491610e3e83610df3565b918282526001938481169081600014610ea05750600114610e60575b50505050565b90919394506000526020928360002092846000945b838610610e8c575050505001019038808080610e5a565b805485870183015294019385908201610e75565b9294505050602093945060ff191683830152151560051b01019038808080610e5a565b6000546001600160a01b03163303610ed757565b60405163118cdaa760e01b8152336004820152602490fd5b6000198114610b7c5760010190565b15610f0557565b60405162461bcd60e51b815260206004820152601660248201527514dd185d1a5bdb88191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b67ffffffffffffffff81116103a75760051b60200190565b60018091600254925b83811115610faa5760405162461bcd60e51b815260206004820152601660248201527514dd185d1a5bdb8818dbd919481b9bdd08199bdd5b9960521b6044820152606490fd5b600081815261041f610fce6020928684526003604080922001905192838092610e2d565b8181519101209083519084012014610fee57610fe990610eef565b610f64565b925050509056fea26469706673582212201a4714878d077f2b34f04034dac219732a8af4ab1ddc10e372fea4394bdc18e064736f6c63430008140033";

type StationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Station__factory extends ContractFactory {
  constructor(...args: StationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<Station> {
    return super.deploy(overrides || {}) as Promise<Station>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Station {
    return super.attach(address) as Station;
  }
  override connect(signer: Signer): Station__factory {
    return super.connect(signer) as Station__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StationInterface {
    return new utils.Interface(_abi) as StationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Station {
    return new Contract(address, _abi, signerOrProvider) as Station;
  }
}
